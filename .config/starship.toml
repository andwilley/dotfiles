add_newline = false

[directory]
truncation_length = 10
truncate_to_repo=false

[hg_branch]
format = '\[[$symbol$branch]($style)\]'
disabled=false

[character]
success_symbol = '[Œª](bold green)'
error_symbol = '[Œª](bold red)'

[time]
disabled = false
format = '[$time]($style) '
style = 'fg:251'
time_format = '%F %T%.3f'

[aws]
format = '\[[$symbol($profile)(\($region\))(\[$duration\])]($style)\]'

[bun]
format = '\[[$symbol]($style)\]'

[c]
format = '\[[$symbol]($style)\]'

[cmake]
format = '\[[$symbol]($style)\]'

[cmd_duration]
format = '\[[‚è± $duration]($style)\]'

[cobol]
format = '\[[$symbol]($style)\]'

[conda]
format = '\[[$symbol$environment]($style)\]'

[crystal]
format = '\[[$symbol]($style)\]'

[daml]
format = '\[[$symbol]($style)\]'

[dart]
format = '\[[$symbol]($style)\]'

[deno]
format = '\[[$symbol]($style)\]'

[docker_context]
format = '\[[$symbol$context]($style)\]'

[dotnet]
format = '\[[$symbol(üéØ $tfm)]($style)\]'

[elixir]
format = '\[[$symbol]($style)\]'

[elm]
format = '\[[$symbol]($style)\]'

[erlang]
format = '\[[$symbol]($style)\]'

[fennel]
format = '\[[$symbol]($style)\]'

[fossil_branch]
format = '\[[$symbol$branch]($style)\]'

[gcloud]
format = '\[[$symbol$account(@$domain)(\($region\))]($style)\]'

[git_branch]
disabled = true
format = '\[[$symbol$branch]($style)\]'

[git_status]
disabled = true
format = '([\[$all_status$ahead_behind\]]($style))'

[golang]
format = '\[[$symbol]($style)\]'

[gradle]
format = '\[[$symbol]($style)\]'

[guix_shell]
format = '\[[$symbol]($style)\]'

[haskell]
format = '\[[$symbol]($style)\]'

[haxe]
format = '\[[$symbol]($style)\]'

[helm]
format = '\[[$symbol]($style)\]'

[java]
format = '\[[$symbol]($style)\]'

[custom.jj]
ignore_timeout = true
description = "The current jj status"
when = "jj root"
symbol = "\nÛ±óÜ "
command = '''
jj log --revisions @- --no-graph --ignore-working-copy --color always --limit 1 --template '
  separate(" ",
    change_id.shortest(4),
    bookmarks,
    "|",
    concat(
      if(conflict, "üí•"),
      if(divergent, "üöß"),
      if(hidden, "üëª"),
      if(immutable, "üîí"),
    ),
    raw_escape_sequence("\x1b[1;32m") ++ if(empty, "(empty)"),
    raw_escape_sequence("\x1b[1;32m") ++ coalesce(
      truncate_end(29, description.first_line(), "‚Ä¶"),
      "(no description set)",
    ) ++ raw_escape_sequence("\x1b[0m"),
  )
'
'''

[julia]
format = '\[[$symbol]($style)\]'

[kotlin]
format = '\[[$symbol]($style)\]'

[kubernetes]
format = '\[[$symbol$context( \($namespace\))]($style)\]'

[lua]
format = '\[[$symbol]($style)\]'

[memory_usage]
format = '\[$symbol[$ram( | $swap)]($style)\]'

[meson]
format = '\[[$symbol$project]($style)\]'

[nim]
format = '\[[$symbol]($style)\]'

[nix_shell]
format = '\[[$symbol$state( \($name\))]($style)\]'

[nodejs]
format = '\[[$symbol]($style)\]'

[ocaml]
format = '\[[$symbol(\($switch_indicator$switch_name\))]($style)\]'

[opa]
format = '\[[$symbol]($style)\]'

[openstack]
format = '\[[$symbol$cloud(\($project\))]($style)\]'

[os]
format = '\[[$symbol]($style)\]'

[package]
format = '\[[$symbol]($style)\]'

[perl]
format = '\[[$symbol]($style)\]'

[php]
format = '\[[$symbol]($style)\]'

[pijul_channel]
format = '\[[$symbol$channel]($style)\]'

[pulumi]
format = '\[[$symbol$stack]($style)\]'

[purescript]
format = '\[[$symbol]($style)\]'

[python]
disabled = true
format = '\[[${symbol}${pyenv_prefix}(\($virtualenv\))]($style)\]'

[raku]
format = '\[[$symbol]($style)\]'

[red]
format = '\[[$symbol]($style)\]'

[ruby]
format = '\[[$symbol]($style)\]'

[rust]
format = '\[[$symbol]($style)\]'

[scala]
format = '\[[$symbol]($style)\]'

[spack]
format = '\[[$symbol$environment]($style)\]'

[sudo]
format = '\[[as $symbol]($style)\]'

[swift]
format = '\[[$symbol]($style)\]'

[terraform]
format = '\[[$symbol$workspace]($style)\]'

[username]
format = '\[[$user]($style)\]'

[vagrant]
format = '\[[$symbol]($style)\]'

[vlang]
format = '\[[$symbol]($style)\]'

[zig]
format = '\[[$symbol]($style)\]'

[solidity]
format = '\[[$symbol]($style)\]'

